DNA_Reverse_Complement = {
    'A' : 'T', # A becomes T
    'T' : 'A', # T becomes A
    'G' : 'C', # G becomes C
    'C' : 'G'  # C becomes G
}


def reverse_compliment(seq):
  """We compute the complement first, then reverse the string"""
  return ''.join([DNA_Reverse_Complement[nucleotide] for nucleotide in seq])[::-1]  



print(reverse_compliment('CTGCGACTGTTAGAGCCAAAACCCTATCAATTAATATTGTAGCAATAGTGCTCGTCCGTGCAAAATACAATCGATCCAAATATAGAAACTGCAAAAACACTACGAATGGGTTCCGAGTAAGGTTCTCGTGATACCGACGGGTCGAGAATTCGGAGTTACTTCACCGGTGCATTTGCCTTAGGAGTAGGTCGACAAATACTCCCCTGGAAGCTCCCGGGTTCGCAGATTTTAACTGCTGACGAGATTAATGTTATCATTGGGAGCACAATTGACTACATTCAAACTAAAATGCATTTCACCTCACAGAACTTACTCCCGACTGCTAGAAATCTTAGATACTGATGGGTGCTCCTTCAAAAAGAGCCTCAGTGCGGGATTCCGACCGGTGTAAGTGTAGTCATTCTCGGCGGAATACCCACAAGCGGCACTTGGCACGCAGCACTTACATTCCGTCCGTGCTAGTGAGTTATCTAAAGTACCATTAACTGTGGGCGACTGCACAGAGCGGTCATATTTTGAGTGACCCAATCATGCACTAAACCGGGACCGCTGACGTCTTGCGAAGCCTTAGACATGAGAAGCGTGTACCCCGAAGTCTACAACGACTAGCTCAAGCGCCCCTCCAGTACAACGATAGTTGGAATGTCAGGCAAATCCCGGTAAAAGGACCCGCAGCAATAGTAACCGAGTTGAATCATCCTCTATATGTAAAGTGGATCTGTTTGATTTACGGGGTTAAGATTCAGGCGGAATACTCCGTGCCGCTAAGTTTCGAATCCGGTAACTTTGCCCACTAAAGTACCTCCCAACCTTTCTACCCACTCCGTGATGGTAAAAGTAGAGCGCTTAT'))